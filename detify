#!/bin/bash

APP_NAME="detify"
APP_HOME="$HOME/.local/share/$APP_NAME"
VENV="$APP_HOME/venv"
INIT_SCRIPT="$APP_HOME/init.py"
CONFIG_FILE="$APP_HOME/config"

# Get music dir from config or default to ~/Music
MUSIC_DIR=$(cat "$CONFIG_FILE" 2>/dev/null || echo "$HOME/Music")

cd $MUSIC_DIR

run_download() {
  (
    cd "$MUSIC_DIR" || exit 1

    exists=$("$VENV/bin/python" "$INIT_SCRIPT" check)

    if [[ "$exists" == "True" ]]; then
      echo "‚úÖ Already downloaded"
    else
      echo "‚¨áÔ∏è  Downloading track..."
      spotdl "$(detify)"
    fi
  )
}

# Show help
if [[ "$1" == "--help" || "$1" == "-h" ]]; then
  echo "Usage: detify [download|auto]"
  echo ""
  echo "  download   ‚Üí manually download current Spotify track"
  echo "  auto       ‚Üí monitor and auto-download new tracks"
  echo "  (no args)  ‚Üí run init.py inside venv"
  exit 0
fi

# Download current track
if [[ "$1" == "download" ]]; then
  run_download

elif [[ "$1" == "auto" ]]; then
  (
    LOG_FILE="$APP_HOME/auto.log"
    echo "üîÅ Starting auto-download at $(date)" >> "$LOG_FILE"

    DEBOUNCE_SECONDS=10
    LAST_CONFIRMED_TRACK=""
    PENDING_TRACK=""

    get_current_track() {
        ARTIST=$(playerctl --player=spotify metadata artist 2>/dev/null)
        TITLE=$(playerctl --player=spotify metadata title 2>/dev/null)
        echo "$ARTIST - $TITLE"
    }

    dbus-monitor "interface='org.freedesktop.DBus.Properties',member='PropertiesChanged',arg0='org.mpris.MediaPlayer2.Player'" |
    while read -r line; do
        if echo "$line" | grep -q "Metadata"; then
            CURRENT_TRACK=$(get_current_track)
            [[ -z "$CURRENT_TRACK" ]] && continue
            if [[ "$CURRENT_TRACK" == "$LAST_CONFIRMED_TRACK" ]]; then continue; fi

            PENDING_TRACK="$CURRENT_TRACK"
            (
                sleep "$DEBOUNCE_SECONDS"
                RECHECK_TRACK=$(get_current_track)
                if [[ "$RECHECK_TRACK" == "$PENDING_TRACK" && "$RECHECK_TRACK" != "$LAST_CONFIRMED_TRACK" ]]; then
                    echo "üéµ Confirmed: $RECHECK_TRACK" | tee -a "$LOG_FILE"
                    
                    TRACK_NAME=$("$VENV/bin/python" "$INIT_SCRIPT")
                    echo "‚¨áÔ∏è  Downloading: $TRACK_NAME" | tee -a "$LOG_FILE"

                    run_download
                    echo "‚úÖ Done: $TRACK_NAME at $(date)" | tee -a "$LOG_FILE"
                    LAST_CONFIRMED_TRACK="$RECHECK_TRACK"
                fi
            ) &
        fi
    done
  ) &

# Default: run init.py
else
  if [[ -f "$VENV/bin/activate" ]]; then
    source "$VENV/bin/activate"
    python "$INIT_SCRIPT"
  else
    echo "‚ùå Virtual environment not found. Try reinstalling."
    exit 1
  fi
fi

